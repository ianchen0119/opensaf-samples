<?xml version="1.0" encoding="utf-8"?>
<!-- Created with Liquid XML Studio - FREE Community Edition 7.1.6.1440 (http://www.liquid-technologies.com) -->
<upgradeCampaign xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:///C:/Users/eingber/SA-forum/SMF/SMF%20schema/SAI-AIS-SMF-UCS-A.01.02_modified.xsd" safSmfCampaign="safSmfCampaign=campaign_rolling_nodes">
  <!--
    This campaign updates a component in the AmfDemo application
    with a rolling upgrade.
	The campaign consists of five procedures
	1) RollingNodesSC_CompTypeAsEntTempl,      exec level 2  //node group
	2) RollingNodesPL_CompTypeAsEntTempl,      exec level 3  //node group
	3) RollingNodesCluster_CompTypeAsEntTempl, exec level 4

	The procedures iterates over cluster and node group.
	Both procedures component type uses to filter out the "safComp=AmfDemo".
	The first procedure change the versioned type to safVersion=5.5.5, the next procedure
	set it back to safVersion=4.0.0.
	
    Prerequisites;
    ==============
    The AmfDemo application is up and running.

    Execution;
    ==========
    immcfg -c SaSmfCampaign -a saSmfCmpgFileUri=/hostfs/campaign_rolling_nodes.xml\
      safSmfCampaign=campaign_rolling_nodes,safApp=safSmfService
    immadm -o 1 safSmfCampaign=campaign_rolling_nodes,safApp=safSmfService
    immlist safSmfCampaign=campaign_rolling_nodes,safApp=safSmfService
    immadm -o 4 safSmfCampaign=campaign_rolling_nodes,safApp=safSmfService

    Expected outcome;
    =================
    immlist safSmfBundle=bundleA,safApp=safSmfServic
        # The new bundle object should exist
    immlist safVersion=5.5.5,safCompType=AmfDemoCompType
        # The new component type should exist
    immlist safHealthcheckKey=AmfDemo,safVersion=5.5.5,safCompType=AmfDemoCompType
        # The new health-check object should exist
    immlist safComp=AmfDemo,safSu=SU1,safSg=AmfDemo,safApp=AmfDemo
    immlist safComp=AmfDemo,safSu=SU2,safSg=AmfDemo,safApp=AmfDemo
        # "saAmfCompType" should refere to the new type

    grep SMF: rootfs/var/SC_2_*/log/messages
        # The "installation online" should have been executed

    immfind -c SaAmfNodeSwBundle
        # The bundleA objects should exist under the SC's.

    Expected future outcome;
    ========================
    The old version types and the old bundle should be cleaned.
    This does not work yet because of missing AMF features.
  -->
	<campaignInfo>
		<campaignPeriod saSmfCmpgExpectedTime="123456789" />
		<configurationBase saSmfCmpgConfigBase="9876543" />
	</campaignInfo>
	<campaignInitialization>
		<addToImm>
			<softwareBundle name="safSmfBundle=bundleA,safApp=safSmfService">
				<removal>
					<offline command="/hostfs/offline_remove.sh" args="bundleA" saSmfBundleRemoveOfflineScope="4"></offline>
					<online command="/hostfs/online_remove.sh" args="bundleA"></online>
				</removal>
				<installation>
					<offline command="/hostfs/offline_install.sh" args="bundleA" saSmfBundleInstallOfflineScope="2"></offline>
					<online command="/hostfs/online_install.sh" args="bundleA"></online>
				</installation>
				<defaultCliTimeout saSmfBundleDefaultCmdTimeout="60000000000" />
			</softwareBundle>
			<amfEntityTypes>
				<CompBaseType safCompType="safCompType=AmfDemo1">
					<CompType safVersion="safVersion=5.5.5">
						<providesCSType safSupportedCsType="safSupportedCsType=safVersion=4.0.0\,safCSType=AmfDemo1" saAmfCtCompCapability="1" saAmfCtDefNumMaxActiveCsi="1" saAmfCtDefNumMaxStandbyCsi="1" />
						<compTypeDefaults saAmfCtCompCategory="1" saAmfCtDefRecoveryOnError="2" saAmfCtDefClcCliTimeout="10000000000" saAmfCtDefCallbackTimeout="10000000000" saAmfCtDefDisableRestart="1">
						</compTypeDefaults>
						<instantiateCmd saAmfCtRelPathInstantiateCmd="amf_demo_script">
							<cmdArgv>instantiate</cmdArgv>
						</instantiateCmd>
						<cleanupCmd saAmfCtRelPathCleanupCmd="amf_demo_script">
							<cmdArgv>cleanup</cmdArgv>
						</cleanupCmd>
						<swBundle saAmfCtSwBundle="safSmfBundle=bundleA,safApp=safSmfService" />
					</CompType>
				</CompBaseType>
			</amfEntityTypes>
		</addToImm>
		<campInitAction>
			<immCCB ccbFlags="0">
				<create objectClassName="SaAmfHealthcheckType" parentObjectDN="safVersion=5.5.5,safCompType=AmfDemo1">
					<attribute name="safHealthcheckKey" type="SA_IMM_ATTR_SASTRINGT">
						<value>safHealthcheckKey=AmfDemo</value>
					</attribute>
					<attribute name="saAmfHctDefPeriod" type="SA_IMM_ATTR_SATIMET">
						<value>10000000000</value>
					</attribute>
					<attribute name="saAmfHctDefMaxDuration" type="SA_IMM_ATTR_SATIMET">
						<value>6000000000</value>
					</attribute>
				</create>
			</immCCB>
		</campInitAction>
		<campInitAction>
			<doCliCommand command="$OSAFCAMPAIGNROOT/campaign_script.sh" args="arg1 $OSAFCAMPAIGNROOT/file1 /fixedpath/file2" ></doCliCommand>
			<undoCliCommand command="$OSAFCAMPAIGNROOT/campaign_script.sh" args="arg1 $OSAFCAMPAIGNROOT/file1 /fixedpath/file2"></undoCliCommand>
			<plmExecEnv amfNode="safAmfNode=SC-1,safAmfCluster=myAmfCluster"></plmExecEnv>
			<plmExecEnv amfNode="safAmfNode=PL-3,safAmfCluster=myAmfCluster"></plmExecEnv>
		</campInitAction>
		<campInitAction>
			<doCliCommand command="/hostfs/campaign_script.sh" args="arg1 $OSAFCAMPAIGNROOT/file1 /fixedpath/file2"></doCliCommand>
			<undoCliCommand command="/hostfs/campaign_script.sh" args="arg1 $OSAFCAMPAIGNROOT/file1 /fixedpath/file2"></undoCliCommand>
			<plmExecEnv amfNode="safAmfNode=SC-2,safAmfCluster=myAmfCluster"></plmExecEnv>
			<plmExecEnv amfNode="safAmfNode=PL-4,safAmfCluster=myAmfCluster"></plmExecEnv>
		</campInitAction>
	</campaignInitialization>
	<upgradeProcedure safSmfProcedure="safSmfProc=RollingNodesSC_CompTypeAsEntTempl" saSmfExecLevel="2">
		<outageInfo>
			<acceptableServiceOutage>
				<all />
			</acceptableServiceOutage>
			<procedurePeriod saSmfProcPeriod="12345678" />
		</outageInfo>
		<upgradeMethod>
			<rollingUpgrade>
				<upgradeScope>
					<byTemplate>
						<targetNodeTemplate objectDN="safAmfNodeGroup=SCs,safAmfCluster=myAmfCluster">
							<swRemove bundleDN="safSmfBundle=AmfDemo" pathnamePrefix="/opt/amf_demo"/>
							<swAdd bundleDN="safSmfBundle=bundleA,safApp=safSmfService" pathnamePrefix="/opt/amf_demo" />
						</targetNodeTemplate>
						<targetEntityTemplate>
							<type objectDN="safVersion=4.0.0,safSuType=AmfDemo1"></type>
							<modifyOperation objectRDN="safComp=AmfDemo" operation="SA_IMM_ATTR_VALUES_REPLACE">
								<attribute name="saAmfCompType" type="SA_IMM_ATTR_SANAMET">
									<value>safVersion=5.5.5,safCompType=AmfDemo1</value>
								</attribute>
							</modifyOperation>
						</targetEntityTemplate>
					</byTemplate>
				</upgradeScope>
				<upgradeStep saSmfStepRestartOption="1" saSmfStepMaxRetry="8"/>
			</rollingUpgrade>
		</upgradeMethod>
	</upgradeProcedure>
	<upgradeProcedure safSmfProcedure="safSmfProc=RollingNodesPL_CompTypeAsEntTempl" saSmfExecLevel="3">
		<outageInfo>
			<acceptableServiceOutage>
				<all />
			</acceptableServiceOutage>
			<procedurePeriod saSmfProcPeriod="12345678" />
		</outageInfo>
		<upgradeMethod>
			<rollingUpgrade>
				<upgradeScope>
					<byTemplate>
						<targetNodeTemplate objectDN="safAmfNodeGroup=PLs,safAmfCluster=myAmfCluster">
							<swRemove bundleDN="safSmfBundle=AmfDemo" pathnamePrefix="/opt/amf_demo"/>
							<swAdd bundleDN="safSmfBundle=bundleA,safApp=safSmfService" pathnamePrefix="/opt/amf_demo" />
						</targetNodeTemplate>
						<targetEntityTemplate>
							<type objectDN="safVersion=4.0.0,safSuType=AmfDemo1"></type>
							<modifyOperation objectRDN="safComp=AmfDemo" operation="SA_IMM_ATTR_VALUES_REPLACE">
								<attribute name="saAmfCompType" type="SA_IMM_ATTR_SANAMET">
									<value>safVersion=5.5.5,safCompType=AmfDemo1</value>
								</attribute>
							</modifyOperation>
						</targetEntityTemplate>
					</byTemplate>
				</upgradeScope>
				<upgradeStep saSmfStepRestartOption="1" saSmfStepMaxRetry="8"/>
			</rollingUpgrade>
		</upgradeMethod>
	</upgradeProcedure>
	<upgradeProcedure safSmfProcedure="safSmfProc=RollingNodesCluster_CompTypeAsEntTempl" saSmfExecLevel="4">
		<outageInfo>
			<acceptableServiceOutage>
				<all />
			</acceptableServiceOutage>
			<procedurePeriod saSmfProcPeriod="12345678" />
		</outageInfo>
		<upgradeMethod>
			<rollingUpgrade>
				<upgradeScope>
					<byTemplate>
						<targetNodeTemplate objectDN="safAmfCluster=myAmfCluster">
							<swRemove bundleDN="safSmfBundle=bundleA,safApp=safSmfService" pathnamePrefix="/opt/amf_demo"/>
							<swAdd bundleDN="safSmfBundle=AmfDemo"  pathnamePrefix="/opt/amf_demo"/>
						</targetNodeTemplate>
						<targetEntityTemplate>
							<type objectDN="safVersion=4.0.0,safSuType=AmfDemo1"></type>
							<modifyOperation objectRDN="safComp=AmfDemo" operation="SA_IMM_ATTR_VALUES_REPLACE">
								<attribute name="saAmfCompType" type="SA_IMM_ATTR_SANAMET">
									<value>safVersion=4.0.0,safCompType=AmfDemo1</value>
								</attribute>
							</modifyOperation>
						</targetEntityTemplate>
					</byTemplate>
				</upgradeScope>
				<upgradeStep saSmfStepRestartOption="1" saSmfStepMaxRetry="8"/>
			</rollingUpgrade>
		</upgradeMethod>
	</upgradeProcedure>
	<campaignWrapup>
		<waitToCommit time="123456" />
		<waitToAllowNewCampaign time="10000"></waitToAllowNewCampaign>
		<removeFromImm>
        </removeFromImm>
	</campaignWrapup>
</upgradeCampaign>
